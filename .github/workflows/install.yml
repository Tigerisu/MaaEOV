name: install

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    # branches:
    #   - "**"
    # paths:
    #   - ".github/workflows/install.yml"
    #   - "assets/**"
    #   - "**.py"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $($is_release) ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi

          echo tag=$tag | tee -a $GITHUB_OUTPUT
          echo is_release=$is_release | tee -a $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}

  install-win:
    needs: meta
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: windows-latest
          - arch: aarch64
            runner: windows-11-arm
      fail-fast: false
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1
        with:
          repository: MaaXYZ/MaaFramework
          fileName: "MAA-win-${{ matrix.arch }}*"
          latest: true
          out-file-path: "deps"
          extract: true

      - name: Download MFAAvalonia
        id: download_mfa
        uses: robinraju/release-downloader@v1
        with:
          repository: SweetSmellFox/MFAAvalonia
          fileName: "MFAAvalonia-*-win-${{ (matrix.arch == 'x86_64' && 'x64') || (matrix.arch == 'aarch64' && 'arm64') }}*"
          latest: true
          out-file-path: "MFA"
          extract: true

      - name: Clean up MFAAvalonia archive
        shell: bash
        run: |
          ARCHIVE_FILE_PATH="${{ fromJson(steps.download_mfa.outputs.downloaded_files)[0] }}"
          rm -f "${ARCHIVE_FILE_PATH}"
          echo "Archive cleanup command executed for MFAAvalonia."

      - name: Setup Embed Python
        shell: bash
        run: |
          python ci/setup_embed_python.py
          ./install/python/python.exe -m ensurepip --upgrade
          ./install/python/python.exe -m pip install --upgrade pip setuptools wheel

      - name: Install Python dependencies
        shell: bash
        run: |
          ./install/python/python.exe -m pip install -r requirements.txt

      - name: Install
        shell: bash
        run: |
          ./install/python/python.exe ./ci/install.py ${{ needs.meta.outputs.tag }}
          if [ -d "MFA" ]; then
            echo "Copying MFA files to install directory..."
            mkdir -p install
            cp -rpvn MFA/. install/
          else
            echo "MFA directory not found, skipping copy."
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: MaaEOV-win-${{ matrix.arch }}
          path: "install"

  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: .github/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, install-win, changelog]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done

      - uses: softprops/action-gh-release@v2.2.2
        with:
          files: assets/*
          tag_name: ${{ needs.meta.outputs.tag }}
          body: ${{ needs.changelog.outputs.release_body }}
          draft: false